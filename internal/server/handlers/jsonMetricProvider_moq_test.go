// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package handlers

import (
	"context"
	"github.com/Eqke/metric-collector/pkg/metric"
	"sync"
)

// Ensure, that JSONMetricProviderMock does implement JSONMetricProvider.
// If this is not the case, regenerate this file with moq.
var _ JSONMetricProvider = &JSONMetricProviderMock{}

// JSONMetricProviderMock is a mock implementation of JSONMetricProvider.
//
//	func TestSomethingThatUsesJSONMetricProvider(t *testing.T) {
//
//		// make and configure a mocked JSONMetricProvider
//		mockedJSONMetricProvider := &JSONMetricProviderMock{
//			GetMetricFunc: func(contextMoqParam context.Context, metrics metric.Metrics) (metric.Metrics, error) {
//				panic("mock out the GetMetric method")
//			},
//		}
//
//		// use mockedJSONMetricProvider in code that requires JSONMetricProvider
//		// and then make assertions.
//
//	}
type JSONMetricProviderMock struct {
	// GetMetricFunc mocks the GetMetric method.
	GetMetricFunc func(contextMoqParam context.Context, metrics metric.Metrics) (metric.Metrics, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetMetric holds details about calls to the GetMetric method.
		GetMetric []struct {
			// ContextMoqParam is the contextMoqParam argument value.
			ContextMoqParam context.Context
			// Metrics is the metrics argument value.
			Metrics metric.Metrics
		}
	}
	lockGetMetric sync.RWMutex
}

// GetMetric calls GetMetricFunc.
func (mock *JSONMetricProviderMock) GetMetric(contextMoqParam context.Context, metrics metric.Metrics) (metric.Metrics, error) {
	if mock.GetMetricFunc == nil {
		panic("JSONMetricProviderMock.GetMetricFunc: method is nil but JSONMetricProvider.GetMetric was just called")
	}
	callInfo := struct {
		ContextMoqParam context.Context
		Metrics         metric.Metrics
	}{
		ContextMoqParam: contextMoqParam,
		Metrics:         metrics,
	}
	mock.lockGetMetric.Lock()
	mock.calls.GetMetric = append(mock.calls.GetMetric, callInfo)
	mock.lockGetMetric.Unlock()
	return mock.GetMetricFunc(contextMoqParam, metrics)
}

// GetMetricCalls gets all the calls that were made to GetMetric.
// Check the length with:
//
//	len(mockedJSONMetricProvider.GetMetricCalls())
func (mock *JSONMetricProviderMock) GetMetricCalls() []struct {
	ContextMoqParam context.Context
	Metrics         metric.Metrics
} {
	var calls []struct {
		ContextMoqParam context.Context
		Metrics         metric.Metrics
	}
	mock.lockGetMetric.RLock()
	calls = mock.calls.GetMetric
	mock.lockGetMetric.RUnlock()
	return calls
}
